/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var v=Object.defineProperty;var I=Object.getOwnPropertyDescriptor;var _=Object.getOwnPropertyNames;var W=Object.prototype.hasOwnProperty;var q=(o,t)=>{for(var e in t)v(o,e,{get:t[e],enumerable:!0})},B=(o,t,e,n)=>{if(t&&typeof t=="object"||typeof t=="function")for(let s of _(t))!W.call(o,s)&&s!==e&&v(o,s,{get:()=>t[s],enumerable:!(n=I(t,s))||n.enumerable});return o};var J=o=>B(v({},"__esModule",{value:!0}),o);var K={};q(K,{default:()=>V});module.exports=J(K);var j=require("obsidian");var $=require("obsidian");var A=["string","number","stringDate","select"];function x(o){let t=JSON.parse(o);try{return Object.entries(t).reduce((n,[s,r])=>(n[s]={type:r.type,default:r.default,...r.options&&{options:r.options}},n),{})}catch(e){throw new Error("Invalid meta data.")}}function O(o,t){var e,n,s;if(Object.keys(o).length!==Object.keys(t).length)return!1;for(let r in o)if(o.hasOwnProperty(r)){if(!((e=t[r])!=null&&e.type)||o[r].type!==t[r].type)return!1;if(o[r].type==="select"){let a=[...(n=o[r].options)!=null?n:[]].sort(),p=[...(s=t[r].options)!=null?s:[]].sort();if(a.length!==p.length||!a.every((i,l)=>i===p[l]))return!1}}return!0}var f=class{constructor(t,e=[]){this.headers=t,this.rows=e}getHeaders(){return this.headers}getRows(){return this.rows}append(t){if(Array.isArray(t)){if(t.length!==Object.keys(this.headers).length)throw new Error(`Row length (${t.length}) must match headers length.`);this.rows.push(t)}else{let e=[];for(let n in this.headers){if(t[n]===void 0)throw new Error(`Missing value for column '${n}'.`);e.push(t[n])}this.rows.push(e)}}delete(t){if(t<0||t>=this.rows.length)throw new Error(`Invalid row index: ${t}`);this.rows.splice(t,1)}updateCell(t,e,n){if(!this.headers[e])throw new Error(`Column '${e}' does not exist.`);if(t<0||t>=this.rows.length)throw new Error(`Invalid row index: ${t}`);let r=Object.keys(this.headers).indexOf(e);this.rows[t][r]=n}toCSV(){let t=[Object.keys(this.headers).join(",")];for(let e of this.rows)t.push(e.map(n=>n===null?"":n.toString()).join(","));return t.join(`
`)}addColumn(t,e,n=0){this.headers[t]={type:e,default:n};for(let s=0;s<this.rows.length;s++)this.rows[s].push(n)}deleteColumn(t){if(!this.headers[t])throw new Error(`Column '${t}' does not exist.`);delete this.headers[t];for(let n=0;n<this.rows.length;n++){let s=Object.keys(this.headers).indexOf(t);this.rows[n].splice(s,1)}}};var S=require("obsidian"),w=async(o,t)=>{var e,n;if(t.endsWith(".csv")){let r=(await H(o,t)).split(`
`).map(c=>c.trim()),a=(n=(e=r.shift())==null?void 0:e.split(","))!=null?n:[],p=r.map(c=>c.split(",").map(d=>d.trim()));if(await o.vault.adapter.exists(`${t}.meta`)==!1){let c=JSON.stringify(a.reduce((d,u)=>(d[u]={type:"string",default:""},d),{}),null,2);await T(o,`${t}.meta`,c),new S.Notice(`meta file created : ${t}.meta`)}let i=await H(o,`${t}.meta`),l=x(i);return await new f(l,p)}else console.error(`file extension is not CSV : ${t} (read)`);return null},b=async(o,t,e)=>{if(t.endsWith(".csv")){let n=e.toCSV();await T(o,t,n);let s=e.getHeaders();await G(o,`${t}.meta`,s)}else console.error(`file extension is not CSV : ${t} (save)`)},T=async(o,t,e)=>{let n=o.vault,s=n.getAbstractFileByPath(t);s instanceof S.TFile?await n.modify(s,e):await n.create(t,e)},G=async(o,t,e)=>{let n=await H(o,t),s=x(n);if(!O(e,s)){let r=JSON.stringify(e,null,2);await T(o,t,r)}},H=async(o,t)=>{let e=o.vault,n=e.getAbstractFileByPath(t);if(n instanceof S.TFile)return await e.read(n);throw new Error("file not found")};var M=async(o,t,e,n)=>{let s=z(e,t,n),r=new $.Modal(o);r.contentEl.empty(),r.contentEl.appendChild(s),r.open();let a=r.contentEl.querySelector("#CSV-input-form");a.addEventListener("submit",async p=>{p.preventDefault();let i=new FormData(a),l=[];for(let d of Object.keys(t))l.push(i.get(d));let c=await w(o,e);if(c===null){console.error("file not found");return}c==null||c.append(l),b(o,e,c),r.close()})},z=(o,t,e)=>{let n=document.createElement("form");n.id="CSV-input-form";let s=o.split("/"),r=s[s.length-1],a=document.createElement("h6");a.textContent="Add new row to";let p=document.createElement("h2");p.textContent=r,n.appendChild(a),n.appendChild(p),n.appendChild(document.createElement("hr"));for(let[c,d]of Object.entries(t)){let u=N(c,d,e[c]||"");n.appendChild(u)}let i=document.createElement("div");i.className="button-group";let l=document.createElement("button");return l.className="submit-button",l.type="submit",l.textContent="Submit",i.appendChild(l),n.appendChild(i),n},N=(o,t,e)=>{let n=document.createElement("div");n.className="form-group";let s=document.createElement("label");if(s.className="input-key",s.htmlFor=o,s.textContent=o,n.appendChild(s),t.type==="select"){let r=document.createElement("select");if(r.className="input-value",r.id=o,r.name=o,t.options!==void 0)for(let a of t.options){let p=document.createElement("option");p.value=a,p.textContent=a,r.appendChild(p)}r.value=e,n.appendChild(r)}else{let r=document.createElement("input");r.className="input-value",r.type="text",r.id=o,r.name=o,r.placeholder=t.default.toString(),r.value=e,n.appendChild(r)}return n};var R=o=>{let t=o.getHeaders(),e=o.getRows(),n=document.createElement("div");n.className="table-wrapper";let s=document.createElement("table"),r=document.createElement("thead"),a=document.createElement("tr");for(let i of Object.keys(t)){let l=document.createElement("th");l.textContent=i,a.appendChild(l)}r.appendChild(a),s.appendChild(r);let p=document.createElement("tbody");return e.forEach(i=>{let l=document.createElement("tr");i.forEach(c=>{var u;let d=document.createElement("td");d.textContent=(u=c==null?void 0:c.toString())!=null?u:"",l.appendChild(d)}),p.appendChild(l)}),s.appendChild(p),n.appendChild(s),n};var P=require("obsidian"),D=async o=>{let t={};return o.vault.getFiles().forEach(n=>{if(n.extension==="csv"&&n.parent){let s=n.parent.path;t[s]||(t[s]=[]),t[s].push(n.name)}}),t},y=class extends P.Modal{constructor(e,n){super(e);this.CSVStructure={};this.CSVStructure=n}onOpen(){let{contentEl:e}=this;e.empty(),e.createEl("h2",{text:"CSV explorer"}),Object.keys(this.CSVStructure).forEach(n=>{e.createEl("h3",{text:n}),this.CSVStructure[n].forEach(s=>{e.createEl("p",{text:s})})})}onClose(){let{contentEl:e}=this;e.empty()}};var m=require("obsidian");var L=(o,t,e)=>{let n="";for(let a of Object.keys(e))n+=a+",";n=n.slice(0,-1)+`
`;let s=JSON.stringify(e,null,2),r=o.vault;return r.adapter.write(`${t}.csv`,n).then(()=>{new m.Notice(`${t}.csv file has been created.`)}).catch(a=>(new m.Notice(`Error occurred while creating .csv file:
${a}`),!1)),r.adapter.write(`${t}.csv.meta`,s).then(()=>{new m.Notice(`${t}.csv.meta file has been created.`)}).catch(a=>(new m.Notice(`Error occurred while creating .csv.meta file:
${a}`),!1)),!0},E=class extends m.Modal{constructor(e){super(e)}addColumn(){let e=this.columnsWrapper.createEl("tr"),s=e.createEl("td").createEl("input");s.classList.add("colname-input"),s.id="colname",s.placeholder="name";let r=e.createEl("td"),a=r.createEl("select");a.classList.add("coltype-select"),a.id="coltype";for(let c of A){let d=a.createEl("option");d.value=c,d.text=c}let p=e.createEl("td"),i=p.createEl("input");i.classList.add("coldefault-input"),i.id="coldefault",i.placeholder="default value";let l=p.createEl("input");l.classList.add("coloptions-input"),l.classList.add("colinput-none"),l.id="coloptions",l.placeholder="options (separated by comma)",r.addEventListener("change",()=>{a.value==="select"?(l.classList.remove("colinput-none"),l.classList.add("colinput-block"),i.classList.add("colinput-none"),i.classList.remove("colinput-block")):(l.classList.add("colinput-none"),l.classList.remove("colinput-block"),i.classList.remove("colinput-none"),i.classList.add("colinput-block"))})}createCSVFile(){let{contentEl:e}=this,n=e.querySelector(".filename-input"),s=e.querySelector(".filepath-input"),r=n.value.trim(),a=s.value.trim()||"";if(!r)return new m.Notice("Please enter a file name."),!1;r.endsWith(".csv")&&(r=r.slice(0,-4)),a.length>1&&a.endsWith("/")&&(a=a.slice(0,-1));let p=`${a}/${r}`,i={};return this.columnsWrapper.querySelectorAll("tr").forEach(l=>{let c=l.querySelector("#colname"),d=l.querySelector("#coltype"),u=l.querySelector("#coldefault"),k=l.querySelector("#coloptions"),h=c==null?void 0:c.value.trim(),g=d==null?void 0:d.value,C=u==null?void 0:u.value.trim();if(C=="")switch(g){case"number":C=0;break;case"stringDate":C="1970-01-01";break;case"string":case"select":case"null":default:C="";break}h&&g&&(i[h]={type:g,default:C,options:g==="select"?k.value.split(",").map(F=>F.trim()):void 0})}),Object.keys(i).length===0?(new m.Notice("add at least one column"),!1):L(this.app,p,i)}onOpen(){let{contentEl:e}=this;e.createEl("h2",{text:"Create CSV table"}),e.createEl("hr").classList.add("horizon-line");let s=e.createEl("div");s.classList.add("filename-container");let r=s.createEl("input");r.placeholder="Title",r.classList.add("filename-input");let a=s.createEl("input");a.placeholder="file path(default: root)",a.classList.add("filepath-input"),e.createEl("button",{text:"Add column"}).addEventListener("click",()=>{this.addColumn()});let i=e.createEl("table");i.classList.add("columns-table");let l=i.createEl("colgroup");l.createEl("col").classList.add("colgroup-name"),l.createEl("col").classList.add("colgroup-type"),l.createEl("col").classList.add("colgroup-value");let h=i.createEl("thead").createEl("tr");h.classList.add("columns-table-header"),h.createEl("th",{text:"Column name"}),h.createEl("th",{text:"Type"}),h.createEl("th",{text:"Default value"}),this.columnsWrapper=i.createEl("tbody"),this.columnsWrapper.classList.add("columns-wrapper"),e.createEl("hr").classList.add("horizon-line"),e.createEl("button",{text:"Create"}).addEventListener("click",()=>{event==null||event.preventDefault(),this.createCSVFile()?this.close():new m.Notice("Error occurred while creating .csv file")})}onClose(){let{contentEl:e}=this;e.empty()}};var V=class extends j.Plugin{constructor(){super(...arguments);this.readCSV=async(e,n)=>w(e,n);this.saveCSV=async(e,n,s)=>b(e,n,s);this.openCSVInputModal=async(e,n,s,r={})=>{M(e,n,s,r)};this.createCSVTableView=e=>R(e);this.createCSVFile=(e,n)=>{L(this.app,e,n)}}async onload(){window.CSVTable=f,this.addCommand({id:"create-CSV-table",name:"Create CSV table",callback:()=>{new E(this.app).open()}}),this.addCommand({id:"open-CSV-explorer",name:"Open CSV explorer",callback:async()=>{let e=await D(this.app);new y(this.app,e).open()}})}onunload(){}};

/* nosourcemap */